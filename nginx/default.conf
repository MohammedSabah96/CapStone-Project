upstream client {
  server client:3000;
}

upstream api {
  server api:8080;
}

server {
  listen 80;
  listen 443;
  server_name $SERVER_NAME;
  client_max_body_size 2M;
  location / {
    proxy_pass http://client;
  }

  location /sockjs-node {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_pass http://client;
  }
  location @flask {
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Range, Authorization';
    add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range';

    proxy_read_timeout 10;
    proxy_send_timeout 10;
    send_timeout 60;
    resolver_timeout 120;
    client_body_timeout 120;

    # set headers to pass request info to Flask
    proxy_set_header   Host $http_host;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-For $remote_addr;
    proxy_redirect     off;
    proxy_pass http://api;
  }
  location /api {
    rewrite /api/(.*) /$1 break;
    proxy_pass http://api;
  }
}